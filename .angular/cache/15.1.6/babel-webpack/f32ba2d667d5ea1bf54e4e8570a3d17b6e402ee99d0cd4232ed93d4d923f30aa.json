{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookmarkService {\n  constructor(http) {\n    this.http = http;\n    this.jsonURL = 'assets/bookmark.json';\n    this.storageName = 'bookmark_list';\n    this.bookmarks = [{\n      \"id\": 1,\n      \"title\": \"Javascript Tutorial\",\n      \"url\": \"www.xyz.com\",\n      \"category\": \"Category A\"\n    }, {\n      \"id\": 2,\n      \"title\": \"Angular basics\",\n      \"url\": \"www.xyz.com\",\n      \"category\": \"Category A\"\n    }, {\n      \"id\": 3,\n      \"title\": \"React introduction\",\n      \"url\": \"www.xyz.com\",\n      \"category\": \"Category A\"\n    }, {\n      \"id\": 4,\n      \"title\": \"Best food in Dhaka To eat with...\",\n      \"url\": \"www.xyz.com\",\n      \"category\": \"Category B\"\n    }, {\n      \"id\": 5,\n      \"title\": \"Burger vs Pizza\",\n      \"url\": \"www.xyz.com\",\n      \"category\": \"Category B\"\n    }];\n    this.categories = [\"Category A\", \"Category B\"];\n  }\n  // getAllBookmarks(): Observable<Bookmark[]> {\n  //   return this.http.get<Bookmark[]>(this.jsonURL);\n  // }\n  getAllBookmarks() {\n    // return this.bookmarks;\n    const bookmarks = localStorage.getItem(this.storageName);\n    return JSON.parse();\n  }\n  saveStorageBookmarks() {\n    localStorage.setItem(this.storageName, JSON.stringify(this.bookmarks));\n  }\n  // getBookmarkDetails(id: number): Observable<Bookmark>{\n  //   this.getAllBookmarks().subscribe(data => {\n  //     console.log(data);\n  //     this.bookmark = data.find(itemInArray => itemInArray.id === id);\n  //   });\n  //   return this.bookmark;\n  // }\n  getCategories() {\n    return this.categories;\n  }\n  addBookmark(bookmark) {\n    // const httpOptions = {\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   }\n    // };\n    // return this.http.post<Bookmark>(this.jsonURL,{ title, url, category}, httpOptions);\n    this.bookmarks.push(bookmark);\n    console.log(this.bookmarks);\n    this.saveStorageBookmarks();\n  }\n}\nBookmarkService.ɵfac = function BookmarkService_Factory(t) {\n  return new (t || BookmarkService)(i0.ɵɵinject(i1.HttpClient));\n};\nBookmarkService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookmarkService,\n  factory: BookmarkService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAuC1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IArCxB,YAAO,GAAG,sBAAsB;IAChC,gBAAW,GAAG,eAAe;IAC7B,cAAS,GAAe,CACtB;MACE,IAAI,EAAE,CAAC;MACP,OAAO,EAAE,qBAAqB;MAC9B,KAAK,EAAE,aAAa;MACpB,UAAU,EAAE;KACf,EACD;MACI,IAAI,EAAE,CAAC;MACP,OAAO,EAAE,gBAAgB;MACzB,KAAK,EAAE,aAAa;MACpB,UAAU,EAAE;KACf,EACD;MACI,IAAI,EAAE,CAAC;MACP,OAAO,EAAE,oBAAoB;MAC7B,KAAK,EAAE,aAAa;MACpB,UAAU,EAAE;KACf,EACD;MACI,IAAI,EAAE,CAAC;MACP,OAAO,EAAE,mCAAmC;MAC5C,KAAK,EAAE,aAAa;MACpB,UAAU,EAAE;KACf,EACD;MACI,IAAI,EAAE,CAAC;MACP,OAAO,EAAE,iBAAiB;MAC1B,KAAK,EAAE,aAAa;MACpB,UAAU,EAAE;KACf,CACA;IAED,eAAU,GAAU,CAAC,YAAY,EAAC,YAAY,CAAC;EAER;EAEvC;EACA;EACA;EACAC,eAAe;IACb;IACA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACC,WAAW,CAAC;IACxD,OAAOC,IAAI,CAACC,KAAK,EAAE;EACrB;EAEAC,oBAAoB;IAClBL,YAAY,CAACM,OAAO,CAAC,IAAI,CAACJ,WAAW,EAAEC,IAAI,CAACI,SAAS,CAAC,IAAI,CAACR,SAAS,CAAC,CAAC;EACxE;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAS,aAAa;IACX,OAAO,IAAI,CAACC,UAAU;EACxB;EAEAC,WAAW,CAAEC,QAAkB;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAACZ,SAAS,CAACa,IAAI,CAACD,QAAQ,CAAC;IAC7BE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACf,SAAS,CAAC;IAC3B,IAAI,CAACM,oBAAoB,EAAE;EAC7B;;AA5EWV,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAoB,SAAfpB,eAAe;EAAAqB,YAFd;AAAM","names":["BookmarkService","constructor","http","getAllBookmarks","bookmarks","localStorage","getItem","storageName","JSON","parse","saveStorageBookmarks","setItem","stringify","getCategories","categories","addBookmark","bookmark","push","console","log","factory","providedIn"],"sourceRoot":"","sources":["/Users/preety/Desktop/SeliseInterview/selise/src/app/services/bookmark.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Bookmark } from '../interfaces/bookmark';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookmarkService {\n\n  jsonURL = 'assets/bookmark.json';\n  storageName = 'bookmark_list';\n  bookmarks: Bookmark[] = [\n    {  \n      \"id\": 1,  \n      \"title\": \"Javascript Tutorial\",  \n      \"url\": \"www.xyz.com\",  \n      \"category\": \"Category A\"  \n  },\n  {  \n      \"id\": 2,  \n      \"title\": \"Angular basics\",  \n      \"url\": \"www.xyz.com\",  \n      \"category\": \"Category A\"  \n  },\n  {  \n      \"id\": 3,  \n      \"title\": \"React introduction\",  \n      \"url\": \"www.xyz.com\",  \n      \"category\": \"Category A\"  \n  },\n  {  \n      \"id\": 4,  \n      \"title\": \"Best food in Dhaka To eat with...\",  \n      \"url\": \"www.xyz.com\",  \n      \"category\": \"Category B\"  \n  },\n  {  \n      \"id\": 5,  \n      \"title\": \"Burger vs Pizza\",  \n      \"url\": \"www.xyz.com\",  \n      \"category\": \"Category B\"  \n  }\n  ];\n  bookmark!: any;\n  categories: any[] = [\"Category A\",\"Category B\"];\n\n  constructor(private http: HttpClient) {}\n\n  // getAllBookmarks(): Observable<Bookmark[]> {\n  //   return this.http.get<Bookmark[]>(this.jsonURL);\n  // }\n  getAllBookmarks() {\n    // return this.bookmarks;\n    const bookmarks = localStorage.getItem(this.storageName);\n    return JSON.parse()\n  }\n\n  saveStorageBookmarks() {\n    localStorage.setItem(this.storageName, JSON.stringify(this.bookmarks));\n  }\n\n  // getBookmarkDetails(id: number): Observable<Bookmark>{\n  //   this.getAllBookmarks().subscribe(data => {\n  //     console.log(data);\n  //     this.bookmark = data.find(itemInArray => itemInArray.id === id);\n  //   });\n  //   return this.bookmark;\n  // }\n\n  getCategories() {\n    return this.categories;\n  }\n\n  addBookmark (bookmark: Bookmark) {\n    // const httpOptions = {\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   }\n    // };\n    // return this.http.post<Bookmark>(this.jsonURL,{ title, url, category}, httpOptions);\n    this.bookmarks.push(bookmark);\n    console.log(this.bookmarks);\n    this.saveStorageBookmarks();\n  }\n\n  // setBookmark(id: number){\n  //   this.bookmark = this.bookmarks.find(itemInArray => itemInArray.id === id);\n  // }\n  // getBookmark() {\n  //   return this.bookmark;\n  // }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}